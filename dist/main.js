/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./public/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./Foo/Bar.js":
/*!********************!*\
  !*** ./Foo/Bar.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_EventManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../lib/EventManager */ \"./lib/EventManager.js\");\n/* harmony import */ var _lib_EventManager__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lib_EventManager__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_CallBackValueResolver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/CallBackValueResolver */ \"./lib/CallBackValueResolver.js\");\n/* harmony import */ var _lib_CallBackValueResolver__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lib_CallBackValueResolver__WEBPACK_IMPORTED_MODULE_1__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n/**\r\n * Foo\r\n *\r\n *\r\n *\r\n */\n\nvar Bar = /*#__PURE__*/function () {\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    _defineProperty(this, \"subscription\", [{\n      // the elementId we ardocumente subscribing to, can be an id or \"document\" or \"window\"\n      selector: {\n        type: 'querySelector',\n        value: 'body'\n      },\n      // the event we are subscribing to, can be string separated by space eg: \"click customEvent\"\n      subscribers: {\n        click: {\n          resolver: {\n            order: 1,\n            callBack: function callBack(oldValue) {\n              console.log('oldValue', oldValue);\n              return oldValue + oldValue;\n            }\n          }\n        }\n      }\n    }]);\n  }\n\n  _createClass(Bar, [{\n    key: \"getSubscribers\",\n\n    /**\r\n     *\r\n     * @returns {Subscriptions}\r\n     */\n    value: function getSubscribers() {\n      return this.subscription;\n    }\n  }]);\n\n  return Bar;\n}();\n/**\r\n * can be used to fire the event as Foo.FooEvent.fire(details)\r\n * or can be listened to in other Instructor by Foo.FooEvent.name\r\n */\n\n\nBar.FooEvent = {\n  name: 'FooEvent',\n  fire: function fire(detail) {\n    var self = Foo.FooEvent;\n    var eventManager = new _lib_EventManager__WEBPACK_IMPORTED_MODULE_0___default.a();\n    eventManager.fire(self.name, detail);\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bar);\n\n//# sourceURL=webpack:///./Foo/Bar.js?");

/***/ }),

/***/ "./Foo/Foo.js":
/*!********************!*\
  !*** ./Foo/Foo.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_EventManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../lib/EventManager */ \"./lib/EventManager.js\");\n/* harmony import */ var _lib_EventManager__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lib_EventManager__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_CallBackValueResolver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/CallBackValueResolver */ \"./lib/CallBackValueResolver.js\");\n/* harmony import */ var _lib_CallBackValueResolver__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lib_CallBackValueResolver__WEBPACK_IMPORTED_MODULE_1__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n/**\r\n * Foo\r\n *\r\n *\r\n *\r\n */\n\nvar Foo = /*#__PURE__*/function () {\n  function Foo() {\n    _classCallCheck(this, Foo);\n\n    _defineProperty(this, \"subscriptions\", [{\n      selector: 'body',\n      subscribers: {\n        click: {\n          callBack: function callBack(event) {\n            this.scope.documentLoadSubscriberCallBack(event);\n          }\n        }\n      }\n    }, _defineProperty({}, Foo.FooEvent.name, {\n      callBack: function callBack(event) {\n        var data = this.dataResolver.call(this, event.detail);\n        console.log('new value of date: ', data.time.getMilliseconds());\n      },\n      callBackOnes: function callBackOnes(event) {\n        console.log('this is fired only ones');\n      },\n      resolver: function resolver(latest, allResolvers) {\n        // the resolver can change the value of the data in the callBack function even if the resolver function in a different eventInstructor\n        // it only need to have the same selector as the subscriber where CallBackValueResolver.valueResolver is called\n        console.log('all resolver data can be found here: ', allResolvers);\n        console.log('old resolver date: ', latest.time.getMilliseconds());\n        console.log('value resolver will create a new date'); // change the resolver value\n\n        return {\n          time: new Date()\n        };\n      }\n    })]);\n  }\n\n  _createClass(Foo, [{\n    key: \"getSubscribers\",\n\n    /**\r\n     *\r\n     * @returns {Subscription[]}\r\n     */\n    value: function getSubscribers() {\n      return this.subscriptions;\n    }\n  }, {\n    key: \"documentLoadSubscriberCallBack\",\n\n    /**\r\n     *\r\n     * @param event\r\n     */\n    value: function documentLoadSubscriberCallBack(event) {\n      var date = new Date();\n      console.log('eventListener of type: ' + event.type, ', of the element: ' + event.target, 'is called from ' + Foo.constructor.name, ', on date millisecond: ' + date.getMilliseconds()); // publish an event\n\n      Foo.FooEvent.fire({\n        time: date\n      });\n    }\n  }]);\n\n  return Foo;\n}();\n/**\r\n * can be used to fire the event as Foo.FooEvent.fire(details)\r\n * or can be listened to in other Instructor by Foo.FooEvent.name\r\n */\n\n\nFoo.FooEvent = {\n  name: 'FooEvent',\n  fire: function fire(detail) {\n    var self = Foo.FooEvent;\n    var eventManager = new _lib_EventManager__WEBPACK_IMPORTED_MODULE_0___default.a();\n    eventManager.fire(self.name, detail);\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Foo);\n\n//# sourceURL=webpack:///./Foo/Foo.js?");

/***/ }),

/***/ "./lib/CallBackValueResolver.js":
/*!**************************************!*\
  !*** ./lib/CallBackValueResolver.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CallBackValueResolver =\n/** @class */\nfunction () {\n  function CallBackValueResolver() {}\n  /**\n   * return an unique resolver\n   * @param selectorId\n   * @param events\n   */\n\n\n  CallBackValueResolver.getResolverId = function (selectorId, events) {\n    return selectorId + '_' + events;\n  };\n  /**\n   *\n   * @param resolver\n   * @param resolverId\n   */\n\n\n  CallBackValueResolver.setResolver = function (resolver, resolverId) {\n    if (!CallBackValueResolver.resolvers.hasOwnProperty(resolverId)) {\n      CallBackValueResolver.resolvers[resolverId] = [];\n    }\n\n    var index = -1; // @ts-ignore\n\n    if (resolver.order) {\n      // order is defined in the resolver\n      // @ts-ignoreresolver\n      index = resolver.order;\n    } else if (typeof resolver === 'function') {\n      resolver.callBack = resolver;\n    }\n\n    if (!CallBackValueResolver.resolvers[resolverId][index]) {\n      CallBackValueResolver.resolvers[resolverId][index] = [];\n    }\n\n    CallBackValueResolver.resolvers[resolverId][index].push(resolver); // now we sort the resolver that priority is considered\n\n    var ordered = {};\n    Object.keys(CallBackValueResolver.resolvers[resolverId]).sort().forEach(function (key) {\n      ordered[key] = CallBackValueResolver.resolvers[resolverId][key];\n    }); // reassigning sorted values\n\n    CallBackValueResolver.resolvers[resolverId] = ordered;\n  };\n  /**\n   * return value that is set in the\n   * @param returns\n   */\n\n\n  CallBackValueResolver.valueResolver = function (returns) {\n    var paramsArray = [];\n\n    for (var order in CallBackValueResolver.resolvers[this.resolverId]) {\n      if (CallBackValueResolver.resolvers[this.resolverId].hasOwnProperty(order)) {\n        // the resolver function will have all returned value of all resolvers that has less priority\n        CallBackValueResolver.resolvers[this.resolverId][order].forEach(function (resolverFunction) {\n          paramsArray.push(returns);\n          returns = resolverFunction.callBack(returns, paramsArray);\n        });\n      }\n    }\n\n    return returns;\n  };\n  /**\n   * hold all resolver functions on proper order\n   */\n\n\n  CallBackValueResolver.resolvers = {};\n  return CallBackValueResolver;\n}();\n\nexports[\"default\"] = CallBackValueResolver;\n\n//# sourceURL=webpack:///./lib/CallBackValueResolver.js?");

/***/ }),

/***/ "./lib/EventManager.js":
/*!*****************************!*\
  !*** ./lib/EventManager.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // @flow\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ValueResolver_1 = __importDefault(__webpack_require__(/*! ./ValueResolver */ \"./lib/ValueResolver.js\"));\n\nvar InlineEventManager_1 = __importDefault(__webpack_require__(/*! ./InlineEventManager */ \"./lib/InlineEventManager.js\"));\n\n__webpack_require__(/*! events-polyfill */ \"./node_modules/events-polyfill/index.js\");\n\nvar EventManager =\n/** @class */\nfunction () {\n  /**\n   *\n   * @returns {void}\n   */\n  function EventManager() {\n    this.publishers = {};\n    return this.singleton();\n  }\n  /**\n   *\n   * @returns {EventManager}\n   */\n\n\n  EventManager.prototype.singleton = function () {\n    if (!EventManager.Singleton) {\n      EventManager.Singleton = this;\n      this.initialize();\n    }\n\n    return EventManager.Singleton;\n  };\n\n  EventManager.prototype.initialize = function () {\n    this.valueResolver = new ValueResolver_1[\"default\"]();\n    new InlineEventManager_1[\"default\"](this);\n  };\n\n  EventManager.prototype.dataResolver = function (value) {\n    var _a; // @ts-ignore\n\n\n    return (_a = EventManager.Singleton.valueResolver) === null || _a === void 0 ? void 0 : _a.dataResolver.call(this, value);\n  };\n\n  EventManager.prototype.setDataResolver = function (resolver, resolverId) {\n    var _a;\n\n    return (_a = this.valueResolver) === null || _a === void 0 ? void 0 : _a.setResolver(resolver, resolverId);\n  };\n\n  EventManager.prototype.unresolve = function (resolverIdentity) {\n    var _a;\n\n    return (_a = this.valueResolver) === null || _a === void 0 ? void 0 : _a.unsetResolver(resolverIdentity);\n  };\n\n  EventManager.prototype.setResolverPriority = function (priority) {\n    var _a;\n\n    return (_a = this.valueResolver) === null || _a === void 0 ? void 0 : _a.setOrder(priority);\n  };\n  /**\n   * return an id that contain the element and the event\n   *\n   * @param selector\n   */\n\n\n  EventManager.getSelectorId = function (selector) {\n    return typeof selector !== \"string\" ? selector.type + '___' + selector.value : selector;\n  };\n  /**\n   * returns HTMLElement from selector,\n   * @param selector\n   * @private\n   */\n\n\n  EventManager.getElement = function (selector) {\n    // @ts-ignore\n    return typeof selector === \"string\" ? document.querySelector(selector) : document[selector.type](selector.value);\n  };\n  /**\n   * will cleanup the subscriber and start listening\n   *\n   * @param eventsInstructor\n   */\n\n\n  EventManager.prototype.subscribe = function (eventsInstructor) {\n    var eventsInstructorIns = new eventsInstructor(); // check if getSubscribers is a defined method\n\n    if (typeof eventsInstructorIns.getSubscribers() === 'undefined') {\n      throw new Error('getSubscribers is not defined on ' + eventsInstructorIns.constructor.name);\n    }\n\n    var subscribers = eventsInstructorIns.getSubscribers();\n    var self = this; // register the listeners\n\n    subscribers.forEach(function (subscriber) {\n      self.setListener(subscriber, eventsInstructorIns);\n    });\n  };\n  /**\n   *\n   * @param currentSubscriber\n   * @param eventInstructor\n   */\n\n\n  EventManager.prototype.setListener = function (currentSubscriber, eventInstructor) {\n    var _a, _b;\n\n    var element;\n    var selectorId;\n    var self = this; // if the selector has document then the Document object will be returned\n\n    if (currentSubscriber.selector === 'document' || !currentSubscriber.selector) {\n      element = document;\n      selectorId = 'document';\n    } else {\n      element = EventManager.getElement(currentSubscriber.selector);\n      selectorId = EventManager.getSelectorId(currentSubscriber.selector);\n    }\n\n    var instructorName = eventInstructor.constructor.name;\n    var returns = (_a = {}, _a[instructorName] = (_b = {}, _b[selectorId] = {}, _b), _a);\n\n    if (!currentSubscriber.subscribers) {\n      currentSubscriber.subscribers = currentSubscriber;\n    }\n\n    var _loop_1 = function _loop_1(events) {\n      var _a;\n\n      returns[instructorName][selectorId] = (_a = {}, _a[events] = [], _a);\n\n      if (currentSubscriber.subscribers.hasOwnProperty(events)) {\n        // splitting if the key is string, this allow event like 'click touch'\n        var eventsArray = events.split(' '); // adding ability to call this.scope inside the function\n\n        currentSubscriber.subscribers[events].scope = eventInstructor;\n        var resolverId_1; // @ts-ignore\n\n        if (currentSubscriber.subscribers[events].hasOwnProperty('resolverId')) {\n          // @ts-ignore\n          resolverId_1 = currentSubscriber.subscribers[events].resolverId;\n        } else {\n          resolverId_1 = ValueResolver_1[\"default\"].getResolverId(selectorId, events);\n        }\n\n        var eventOptions = currentSubscriber.subscribers[events].options;\n\n        var _loop_2 = function _loop_2(currentEvent) {\n          var callBackName = instructorName + '_' + selectorId + '_' + eventsArray[currentEvent];\n\n          if (currentSubscriber.subscribers[events].hasOwnProperty('callBack')) {\n            // @ts-ignore\n            window[callBackName] = function (event) {\n              // @ts-ignore\n              currentSubscriber.subscribers[events].callBack.bind({\n                dataResolver: self.dataResolver,\n                resolverId: resolverId_1\n              }, event);\n            }; // @ts-ignore\n\n\n            element === null || element === void 0 ? void 0 : element.addEventListener(eventsArray[currentEvent], window[callBackName], eventOptions); // returned value will contain information that can be referred to when unsubscribe\n\n            returns[instructorName][selectorId][events].push(callBackName);\n            EventManager.unsubscribeList[callBackName] = {\n              callBackName: callBackName,\n              event: eventsArray[currentEvent],\n              element: element,\n              options: eventOptions\n            };\n          }\n\n          if (currentSubscriber.subscribers[events].hasOwnProperty('callBackOnes')) {\n            var onesCallBackName_1 = callBackName + 'ones'; // @ts-ignore\n\n            window[onesCallBackName_1] = function (event) {\n              // @ts-ignore\n              event.target.removeEventListener(event.type, window[onesCallBackName_1]); // @ts-ignore\n\n              currentSubscriber.subscribers[events].callBackOnes(event);\n            }; // @ts-ignore\n\n\n            element === null || element === void 0 ? void 0 : element.addEventListener(eventsArray[currentEvent], window[onesCallBackName_1], eventOptions); // returned value will contain information that can be referred to when unsubscribe\n            // @ts-ignore\n\n            returns[instructorName][selectorId][events].push(callBackName);\n            EventManager.unsubscribeList[onesCallBackName_1] = {\n              callBackName: onesCallBackName_1,\n              event: eventsArray[currentEvent],\n              element: element,\n              options: eventOptions\n            };\n          }\n\n          if (currentSubscriber.subscribers[events].hasOwnProperty('resolver')) {\n            var resolver = currentSubscriber.subscribers[events].resolver;\n            this_1.setDataResolver(resolver, resolverId_1);\n          }\n        };\n\n        for (var currentEvent in eventsArray) {\n          _loop_2(currentEvent);\n        }\n      }\n    };\n\n    var this_1 = this;\n\n    for (var events in currentSubscriber.subscribers) {\n      _loop_1(events);\n    }\n\n    return returns;\n  };\n  /**\n   *\n   * @param unsubscribable\n   */\n\n\n  EventManager.prototype.unsubscribe = function (unsubscribable) {\n    var success = false;\n\n    if (typeof unsubscribable === 'string') {\n      success = EventManager.removeListener(unsubscribable);\n    } else {\n      var self_1 = this;\n\n      for (var unsub in unsubscribable) {\n        if (unsubscribable.hasOwnProperty(unsub)) {\n          for (var elem in unsubscribable[unsub]) {\n            if (unsubscribable[unsub].hasOwnProperty(elem)) {\n              for (var event_1 in unsubscribable[unsub][elem]) {\n                if (unsubscribable[unsub][elem].hasOwnProperty(event_1)) {\n                  unsubscribable[unsub][elem][event_1].forEach(function (unsubscribableId) {\n                    EventManager.removeListener(unsubscribableId);\n                    success = true;\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return success;\n  };\n  /**\n   * remove an event listener\n   * @param unsubscribableId\n   */\n\n\n  EventManager.removeListener = function (unsubscribableId) {\n    var success = false;\n\n    if (EventManager.unsubscribeList[unsubscribableId]) {\n      success = true;\n      var element = EventManager.unsubscribeList[unsubscribableId].element;\n      var event_2 = EventManager.unsubscribeList[unsubscribableId].event;\n      var callBackName = EventManager.unsubscribeList[unsubscribableId].callBackName;\n      var options = EventManager.unsubscribeList[unsubscribableId].options; // @ts-ignore\n\n      element === null || element === void 0 ? void 0 : element.removeEventListener(event_2, window[callBackName], options);\n    }\n\n    return success;\n  };\n  /**\n   *\n   * subscribe to an array of eventInstructors\n   * @param subscribers\n   */\n\n\n  EventManager.prototype.setSubscribers = function (subscribers) {\n    var self = this;\n    subscribers.forEach(function (eventInstructor) {\n      self.subscribe(eventInstructor);\n    });\n  };\n  /**\n   *\n   * @param eventObject\n   */\n\n\n  EventManager.prototype.publish = function (eventObject) {\n    var ev = new CustomEvent(eventObject.name, {\n      detail: eventObject.detail,\n      cancelable: true\n    });\n    (eventObject.element ? eventObject.element : document).dispatchEvent(ev); // @ts-ignore\n\n    this.publishers[eventObject.name] = {\n      detail: eventObject.detail\n    };\n  };\n  /**\n   *\n   * @param eventName\n   * @param detail\n   */\n\n\n  EventManager.prototype.fire = function (eventName, detail) {\n    this.publish({\n      name: eventName,\n      detail: detail\n    });\n  };\n  /**\n   * hold events with their function name and options that can be used to unsubscribe from a particular event\n   */\n\n\n  EventManager.unsubscribeList = {};\n  /**\n   *\n   */\n\n  EventManager.eventsRegisteredEvent = {\n    name: 'eventsRegistered',\n    fire: function fire(detail) {\n      var currentEvent = EventManager.eventsRegisteredEvent;\n      var eventManager = new EventManager();\n      eventManager.fire(currentEvent.name, detail);\n    }\n  };\n  return EventManager;\n}();\n\nexports[\"default\"] = EventManager;\n\n//# sourceURL=webpack:///./lib/EventManager.js?");

/***/ }),

/***/ "./lib/InlineEventManager.js":
/*!***********************************!*\
  !*** ./lib/InlineEventManager.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EventManager_1 = __importDefault(__webpack_require__(/*! ./EventManager */ \"./lib/EventManager.js\"));\n\nvar ValueResolver_1 = __importDefault(__webpack_require__(/*! ./ValueResolver */ \"./lib/ValueResolver.js\"));\n\nvar InlineEventManager =\n/** @class */\nfunction () {\n  /**\n   *\n   * @param eventManager\n   */\n  function InlineEventManager(eventManager) {\n    this.eventManager = eventManager;\n    this.setStringSubscriber();\n    this.setStringSubscribeOnes();\n    this.setStringEventValueResolver();\n    this.setStringUnsubscriber();\n    this.setStringUnresolve();\n  }\n  /**\n   * allows a string to have a subscriber prototype\n   * ('selector').subscribe(function(){})\n   */\n\n\n  InlineEventManager.prototype.setStringSubscriber = function () {\n    var self = this; // @typescript -ingore\n\n    String.prototype.subscribe = function (eventOrCallBack, callBackOrResolver, resolverOrOption, eventOptionsOrOnes, ones) {\n      return self.handleInlineSubscriber(this, eventOrCallBack, callBackOrResolver, resolverOrOption, eventOptionsOrOnes, ones);\n    };\n  };\n  /**\n   * allows a string to have a subscriber prototype\n   * ('selector').subscribe(function(){})\n   */\n\n\n  InlineEventManager.prototype.setStringEventValueResolver = function () {\n    var self = this;\n\n    String.prototype.valueResolver = function (resolver) {\n      return self.handleInlineSubscriber.call(this, resolver);\n    };\n  };\n\n  InlineEventManager.prototype.handleInlineSubscriber = function (selectorOrEvent, eventOrCallBack, callBackOrResolver, resolverOrOption, eventOptionsOrOnes, ones) {\n    var self = this;\n    var selector;\n    var eventName;\n    var element;\n    var callBack;\n    var resolver;\n    var options;\n    var onlyOnes = false;\n    var resolverIsSet = false;\n    var callBackIsSet = false;\n    var args = arguments;\n\n    for (var _i = 0, args_1 = args; _i < args_1.length; _i++) {\n      var arg = args_1[_i];\n\n      if (typeof arg !== 'undefined') {\n        if (typeof arg === 'string' && arg === args[1]) {\n          selector = selectorOrEvent;\n          element = document.querySelector(selector);\n          eventName = arg;\n        } else if (arg === args[1] && typeof arg === 'function' && arg.name === 'resolver') {\n          ValueResolver_1[\"default\"].setResolver(arg, this);\n          return this;\n        } else if (!element) {\n          selector = 'document';\n          element = document;\n          eventName = selectorOrEvent;\n        }\n\n        if (typeof arg === 'function') {\n          if (arg.name === '' || arg.name !== 'resolver' || resolverIsSet) {\n            callBack = arg;\n            callBackIsSet = true;\n          } else if (arg.name === 'resolver' || callBackIsSet) {\n            resolver = arg;\n            resolverIsSet = true;\n          }\n        } else if (typeof arg === 'boolean') {\n          onlyOnes = arg;\n        } else if (_typeof(options) === 'object') {\n          options = arg;\n        }\n      }\n    }\n\n    var selectorId = EventManager_1[\"default\"].getSelectorId({\n      type: selector,\n      value: eventName\n    });\n    var callBackName;\n    var resolverId = ValueResolver_1[\"default\"].getResolverId(selector, eventName);\n\n    if (callBackIsSet) {\n      callBackName = 'inline_' + selectorId;\n\n      window[callBackName] = function (event) {\n        // @ts-ignore\n        if (onlyOnes) {\n          event.target.removeEventListener(event.type, window[callBackName]);\n        } // @ts-ignore\n\n\n        callBack.call({\n          dataResolver: self.eventManager.dataResolver,\n          resolverId: resolverId\n        }, event);\n      }; // @ts-ignore\n\n\n      element === null || element === void 0 ? void 0 : element.addEventListener(eventName, window[callBackName], options);\n      EventManager_1[\"default\"].unsubscribeList[callBackName] = {\n        callBackName: callBackName,\n        event: eventName,\n        element: element,\n        options: options\n      };\n    }\n\n    if (resolverIsSet) {\n      // @ts-ignore\n      selectorId = this.eventManager.valueResolver.setResolver(resolver, resolverId);\n    }\n\n    return callBackName || selectorId;\n  };\n  /**\n   * allows a string to have a subscriber prototype\n   * ('selector').subscribe(function(){})\n   */\n\n\n  InlineEventManager.prototype.setStringUnsubscriber = function () {\n    var eventManager = new EventManager_1[\"default\"]();\n\n    String.prototype.unsubscribe = function () {\n      return eventManager.unsubscribe(this);\n    };\n  };\n  /**\n   * allows a string to have a subscriber prototype\n   * ('selector').subscribe(function(){})\n   */\n\n\n  InlineEventManager.prototype.setStringUnresolve = function () {\n    var eventManager = new EventManager_1[\"default\"]();\n\n    String.prototype.unresolve = function () {\n      return eventManager.unresolve(this);\n    };\n  };\n\n  InlineEventManager.prototype.setStringSubscribeOnes = function () {\n    var self = this;\n\n    String.prototype.subscribeOnes = function (eventOrCallBack, callBackOrResolver, resolverOrOption, eventOptionsOrOnes) {\n      return self.handleInlineSubscriber.call(this, eventOrCallBack, callBackOrResolver, resolverOrOption, eventOptionsOrOnes, true);\n    };\n  };\n\n  return InlineEventManager;\n}();\n\nexports[\"default\"] = InlineEventManager;\n\n//# sourceURL=webpack:///./lib/InlineEventManager.js?");

/***/ }),

/***/ "./lib/ValueResolver.js":
/*!******************************!*\
  !*** ./lib/ValueResolver.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ValueResolver =\n/** @class */\nfunction () {\n  function ValueResolver() {}\n  /**\n   * return an unique resolver\n   * @param selectorId\n   * @param events\n   */\n\n\n  ValueResolver.getResolverId = function (selectorId, events) {\n    return selectorId + '_' + events;\n  };\n  /**\n   *\n   * @param resolver\n   * @param resolverId\n   */\n\n\n  ValueResolver.prototype.setResolver = function (resolver, resolverId) {\n    if (!ValueResolver.resolvers.hasOwnProperty(resolverId)) {\n      ValueResolver.resolvers[resolverId] = [];\n    }\n\n    var index = -1; // @ts-ignore\n\n    if (resolver.order || this.order >= 0) {\n      // order is defined in the resolver\n      // @ts-ignoreresolver\n      index = this.order >= 0 ? this.order : resolver.order;\n      this.order = -1;\n    } else if (typeof resolver === 'function') {\n      resolver.callBack = resolver;\n    } // @ts-ignore\n\n\n    ValueResolver.counter++;\n    var resolverIdentity = resolverId + '-_-' + ValueResolver.counter;\n    resolver.id = ValueResolver.counter;\n\n    if (!ValueResolver.resolvers[resolverId][index]) {\n      ValueResolver.resolvers[resolverId][index] = [];\n    }\n\n    ValueResolver.resolvers[resolverId][index].push(resolver); // now we sort the resolver that priority is considered\n\n    var ordered = {};\n    Object.keys(ValueResolver.resolvers[resolverId]).sort().forEach(function (key) {\n      ordered[key] = ValueResolver.resolvers[resolverId][key];\n    }); // reassigning sorted values\n\n    ValueResolver.resolvers[resolverId] = ordered;\n    return resolverIdentity;\n  };\n  /**\n   *\n   * @param resolverIdentity\n   */\n\n\n  ValueResolver.prototype.unsetResolver = function (resolverIdentity) {\n    var success = false;\n    var identifier = resolverIdentity === null || resolverIdentity === void 0 ? void 0 : resolverIdentity.split('-_-');\n\n    if (ValueResolver.resolvers.hasOwnProperty(identifier[0])) {\n      for (var resolverKey in ValueResolver.resolvers[identifier[0]]) {\n        var i = 0;\n\n        for (var resolverFunction in ValueResolver.resolvers[identifier[0]][resolverKey]) {\n          if (ValueResolver.resolvers[identifier[0]][resolverKey][resolverFunction].id === parseInt(identifier[1])) {\n            ValueResolver.resolvers[identifier[0]][resolverKey].splice(i, 1);\n            success = true;\n          }\n\n          i++;\n        }\n      }\n\n      return success;\n    }\n  };\n  /**\n   * return value that is set in the\n   * @param returns\n   */\n\n\n  ValueResolver.prototype.dataResolver = function (returns) {\n    var paramsArray = [];\n    paramsArray.push(returns);\n\n    for (var order in ValueResolver.resolvers[this.resolverId]) {\n      if (ValueResolver.resolvers[this.resolverId].hasOwnProperty(order)) {\n        // the resolver function will have all returned value of all resolvers that has less priority\n        ValueResolver.resolvers[this.resolverId][order].forEach(function (resolverFunction) {\n          returns = resolverFunction.callBack(returns, paramsArray);\n          paramsArray.push(returns);\n        });\n      }\n    }\n\n    return returns;\n  };\n  /**\n   * used to set the order of the next resolver\n   * @param order\n   */\n\n\n  ValueResolver.prototype.setOrder = function (order) {\n    this.order = number;\n  };\n  /**\n   * hold all resolver functions on proper order\n   */\n\n\n  ValueResolver.resolvers = {};\n  ValueResolver.order = -1;\n  ValueResolver.counter = -1;\n  return ValueResolver;\n}();\n\nexports[\"default\"] = ValueResolver;\n\n//# sourceURL=webpack:///./lib/ValueResolver.js?");

/***/ }),

/***/ "./node_modules/events-polyfill/index.js":
/*!***********************************************!*\
  !*** ./node_modules/events-polyfill/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var require;var require;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function () {\n  function r(e, n, t) {\n    function o(i, f) {\n      if (!n[i]) {\n        if (!e[i]) {\n          var c = \"function\" == typeof require && require;\n          if (!f && c) return require(i, !0);\n          if (u) return u(i, !0);\n          var a = new Error(\"Cannot find module '\" + i + \"'\");\n          throw a.code = \"MODULE_NOT_FOUND\", a;\n        }\n\n        var p = n[i] = {\n          exports: {}\n        };\n        e[i][0].call(p.exports, function (r) {\n          var n = e[i][1][r];\n          return o(n || r);\n        }, p, p.exports, r, e, n, t);\n      }\n\n      return n[i].exports;\n    }\n\n    for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++) {\n      o(t[i]);\n    }\n\n    return o;\n  }\n\n  return r;\n})()({\n  1: [function (require, module, exports) {\n    module.exports = function () {\n      if (typeof EventTarget === 'undefined') {\n        window.EventTarget = Node;\n      }\n      /**\r\n       * Event listener interceptor\r\n       */\n\n\n      var EventListenerInterceptor = {\n        interceptors: [] // { target: EventTarget, interceptors: [{ add: Function, remove: Function }, ...] }\n\n      };\n      /**\r\n       * Returns if exists a previously registered listener from a target and the normalized arguments\r\n       * @param target\r\n       * @param normalizedArguments\r\n       * @return {*}\r\n       */\n\n      EventListenerInterceptor.getRegisteredEventListener = function (target, normalizedArguments) {\n        var key = normalizedArguments.type + '-' + (normalizedArguments.options.capture ? '1' : '0');\n\n        if (target.__eventListeners !== void 0 && target.__eventListeners[key] !== void 0) {\n          var map = target.__eventListeners[key];\n\n          for (var i = 0; i < map.length; i++) {\n            if (map[i].listener === normalizedArguments.listener) {\n              return map[i];\n            }\n          }\n        }\n\n        return null;\n      };\n      /**\r\n       * Registers a listener on a target with some options\r\n       * @param target\r\n       * @param normalizedArguments\r\n       */\n\n\n      EventListenerInterceptor.registerEventListener = function (target, normalizedArguments) {\n        var key = normalizedArguments.type + '-' + (normalizedArguments.options.capture ? '1' : '0');\n\n        if (target.__eventListeners === void 0) {\n          target.__eventListeners = {};\n        }\n\n        if (target.__eventListeners[key] === void 0) {\n          target.__eventListeners[key] = [];\n        }\n\n        target.__eventListeners[key].push(normalizedArguments);\n      };\n      /**\r\n       * Unregisters a listener on a target with some options\r\n       * @param target\r\n       * @param normalizedArguments\r\n       */\n\n\n      EventListenerInterceptor.unregisterEventListener = function (target, normalizedArguments) {\n        var key = normalizedArguments.type + '-' + (normalizedArguments.options.capture ? '1' : '0');\n\n        if (target.__eventListeners !== void 0 && target.__eventListeners[key] !== void 0) {\n          var map = target.__eventListeners[key];\n\n          for (var i = 0; i < map.length; i++) {\n            if (map[i].listener === normalizedArguments.listener) {\n              map.splice(i, 1);\n            }\n          }\n\n          if (map.length === 0) {\n            delete target.__eventListeners[key];\n          }\n        }\n      };\n\n      EventListenerInterceptor.normalizeListenerCallback = function (listener) {\n        if (typeof listener === 'function' || listener === null || listener === void 0) {\n          return listener;\n        } else if (_typeof(listener) === 'object' && typeof listener.handleEvent === 'function') {\n          return listener.handleEvent;\n        } else {\n          // to support Symbol\n          return function (event) {\n            listener(event);\n          };\n        }\n      };\n\n      EventListenerInterceptor.normalizeListenerOptions = function (options) {\n        switch (_typeof(options)) {\n          case 'boolean':\n            options = {\n              capture: options\n            };\n            break;\n\n          case 'undefined':\n            options = {\n              capture: false\n            };\n            break;\n\n          case 'object':\n            if (options === null) {\n              options = {\n                capture: false\n              };\n            }\n\n            break;\n\n          default:\n            throw new Error('Unsupported options type for addEventListener');\n        }\n\n        options.once = Boolean(options.once);\n        options.passive = Boolean(options.passive);\n        options.capture = Boolean(options.capture);\n        return options;\n      };\n\n      EventListenerInterceptor.normalizeListenerArguments = function (type, listener, options) {\n        return {\n          type: type,\n          listener: this.normalizeListenerCallback(listener),\n          options: this.normalizeListenerOptions(options)\n        };\n      };\n\n      EventListenerInterceptor.intercept = function (target, interceptors) {\n        // get an interceptor with this target or null\n        var interceptor = null;\n\n        for (var i = 0; i < this.interceptors.length; i++) {\n          if (this.interceptors[i].target === target) {\n            interceptor = this.interceptors[i];\n          }\n        } // if no interceptor already set\n\n\n        if (interceptor === null) {\n          interceptor = {\n            target: target,\n            interceptors: [interceptors]\n          };\n          this.interceptors.push(interceptor);\n          this.interceptAddEventListener(target, interceptor);\n          this.interceptRemoveEventListener(target, interceptor);\n        } else {\n          // if an interceptor already set, simply add interceptors to the list\n          interceptor.interceptors.push(interceptors);\n        } // var release = function() {\n        //   target.prototype.addEventListener = addEventListener;\n        //   target.prototype.removeEventListener = removeEventListener;\n        // };\n        // this.interceptors.push(release);\n        // return release;\n\n      };\n\n      EventListenerInterceptor.interceptAddEventListener = function (target, interceptor) {\n        var _this = this;\n\n        var addEventListener = target.prototype.addEventListener;\n\n        target.prototype.addEventListener = function (type, listener, options) {\n          var normalizedArguments = _this.normalizeListenerArguments(type, listener, options);\n\n          var registeredEventListener = _this.getRegisteredEventListener(this, normalizedArguments);\n\n          if (!registeredEventListener) {\n            normalizedArguments.polyfilled = {\n              type: normalizedArguments.type,\n              listener: normalizedArguments.listener,\n              options: {\n                capture: normalizedArguments.options.capture,\n                once: normalizedArguments.options.once,\n                passive: normalizedArguments.options.passive\n              }\n            };\n\n            for (var i = 0; i < interceptor.interceptors.length; i++) {\n              var interceptors = interceptor.interceptors[i];\n\n              if (typeof interceptors.add === 'function') {\n                interceptors.add(normalizedArguments);\n              }\n            } // console.log('normalizedArguments', normalizedArguments.polyfilled);\n\n\n            _this.registerEventListener(this, normalizedArguments);\n\n            addEventListener.call(this, normalizedArguments.polyfilled.type, normalizedArguments.polyfilled.listener, normalizedArguments.polyfilled.options);\n          }\n        };\n\n        return function () {\n          target.prototype.addEventListener = addEventListener;\n        };\n      };\n\n      EventListenerInterceptor.interceptRemoveEventListener = function (target, interceptor) {\n        var _this = this;\n\n        var removeEventListener = target.prototype.removeEventListener;\n\n        target.prototype.removeEventListener = function (type, listener, options) {\n          var normalizedArguments = _this.normalizeListenerArguments(type, listener, options);\n\n          var registeredEventListener = _this.getRegisteredEventListener(this, normalizedArguments);\n\n          if (registeredEventListener) {\n            _this.unregisterEventListener(this, normalizedArguments);\n\n            removeEventListener.call(this, registeredEventListener.polyfilled.type, registeredEventListener.polyfilled.listener, registeredEventListener.polyfilled.options);\n          } else {\n            removeEventListener.call(this, type, listener, options);\n          }\n        };\n\n        return function () {\n          target.prototype.removeEventListener = removeEventListener;\n        };\n      };\n\n      EventListenerInterceptor.interceptAll = function (interceptors) {\n        this.intercept(EventTarget, interceptors);\n\n        if (!(window instanceof EventTarget)) {\n          this.intercept(Window, interceptors);\n        }\n      };\n\n      EventListenerInterceptor.releaseAll = function () {\n        for (var i = 0, l = this.interceptors.length; i < l; i++) {\n          this.interceptors();\n        }\n      };\n\n      EventListenerInterceptor.error = function (error) {\n        // throw error;\n        console.error(error);\n      };\n\n      return EventListenerInterceptor;\n    }();\n  }, {}],\n  2: [function (require, module, exports) {\n    (function (EventListenerInterceptor) {\n      /**\r\n       * Event listener type support\r\n       */\n      EventListenerInterceptor.isSupportedOnEvent = function (target, type) {\n        return 'on' + type in target;\n      };\n\n      EventListenerInterceptor.isSupportedTransitionEvent = function (target, type) {\n        return EventListenerInterceptor.isSupportedOnEvent(target, type) || 'style' in target && target.style['transition'] !== void 0;\n      };\n\n      EventListenerInterceptor.isSupportedFullScreenEvent = function (target, type) {\n        if (EventListenerInterceptor.isSupportedOnEvent(target, type)) {\n          return true;\n        } else {\n          if (/^ms/.test(type.toLowerCase())) {\n            return 'msRequestFullscreen' in document.body;\n          } else if (/^moz/.test(type)) {\n            return 'mozRequestFullscreen' in document.body;\n          } else if (/^webkit/.test(type)) {\n            return 'webkitRequestFullscreen' in document.body;\n          } else {\n            return false;\n          }\n        }\n      };\n\n      EventListenerInterceptor.generateEventTypes = function () {\n        var _this = this;\n\n        this.eventTypes = {}; // map of types that resolved to something else\n\n        this.vendorPrefixes = ['', 'webkit', 'moz', 'ms', 'o'];\n        this.eventTypes['wheel'] = ['wheel', 'mousewheel', 'DOMMouseScroll'].map(function (type) {\n          return {\n            type: type,\n            isSupported: _this.isSupportedOnEvent\n          };\n        });\n        this.eventTypes['fullscreenchange'] = ['fullscreenchange', 'mozfullscreenchange', 'webkitfullscreenchange', 'MSFullscreenChange', 'msfullscreenchange'].map(function (type) {\n          return {\n            type: type,\n            isSupported: _this.isSupportedFullScreenEvent\n          };\n        });\n        this.eventTypes['fullscreenerror'] = ['fullscreenerror', 'mozfullscreenerror', 'webkitfullscreenerror', 'MSFullscreenError', 'msfullscreenerror'].map(function (type) {\n          return {\n            type: type,\n            isSupported: _this.isSupportedFullScreenEvent\n          };\n        });\n        ['pointerlockchange', 'pointerlockerror', 'animationstart', 'animationiteration', 'animationend', 'pointercancel', 'pointerdown', 'pointerhover', 'pointermove', 'pointerout', 'pointerover', 'pointerup'].forEach(function (type) {\n          _this.eventTypes[type] = _this.vendorPrefixes.map(function (prefix) {\n            return {\n              type: prefix + type,\n              isSupported: _this.isSupportedOnEvent\n            };\n          });\n        });\n        ['transitionstart', 'transitionrun', 'transitionend'].forEach(function (type) {\n          _this.eventTypes[type] = _this.vendorPrefixes.map(function (prefix) {\n            return {\n              type: prefix + type,\n              isSupported: _this.isSupportedTransitionEvent\n            };\n          });\n        });\n      };\n\n      EventListenerInterceptor.getSupportedEventType = function (target, type) {\n        var types = this.eventTypes[type];\n\n        if (types === void 0) {\n          return type;\n        } else {\n          var _type;\n\n          for (var i = 0; i < types.length; i++) {\n            _type = types[i];\n\n            if (_type.isSupported(target, _type.type)) {\n              // console.log('use : ' + eventTypesPolyfiller[i].type);\n              return _type.type;\n            }\n          } // this.error(new Error('Event listener type ' + String(type) + ' on ' + String(target) + ' is not supported by current environment'));\n\n\n          return type;\n        }\n      };\n\n      EventListenerInterceptor.polyfillListenerEventTypes = function () {\n        this.generateEventTypes();\n\n        var _this = this;\n\n        this.interceptAll({\n          add: function add(normalizedArguments) {\n            normalizedArguments.polyfilled.type = _this.getSupportedEventType(this, normalizedArguments.polyfilled.type);\n          }\n        });\n      };\n\n      EventListenerInterceptor.polyfillListenerEventTypes();\n    })(require('./EventListenerInterceptor.js'));\n  }, {\n    \"./EventListenerInterceptor.js\": 1\n  }],\n  3: [function (require, module, exports) {\n    (function (EventListenerInterceptor) {\n      /**\r\n       * Event listener options support\r\n       */\n      EventListenerInterceptor.detectSupportedOptions = function () {\n        var _this = this;\n\n        this.supportedOptions = {\n          once: false,\n          passive: false,\n          capture: false,\n          all: false,\n          some: false\n        };\n        document.createDocumentFragment().addEventListener('test', function () {}, {\n          get once() {\n            _this.supportedOptions.once = true;\n            return false;\n          },\n\n          get passive() {\n            _this.supportedOptions.passive = true;\n            return false;\n          },\n\n          get capture() {\n            _this.supportedOptions.capture = true;\n            return false;\n          }\n\n        }); // useful shortcuts to detect if options are all/some supported\n\n        this.supportedOptions.all = this.supportedOptions.once && this.supportedOptions.passive && this.supportedOptions.capture;\n        this.supportedOptions.some = this.supportedOptions.once || this.supportedOptions.passive || this.supportedOptions.capture;\n      };\n\n      EventListenerInterceptor.polyfillListenerOptions = function () {\n        this.detectSupportedOptions();\n\n        if (!this.supportedOptions.all) {\n          var _this = this;\n\n          this.interceptAll({\n            add: function add(normalizedArguments) {\n              // console.log('intercepted', normalizedArguments);\n              var once = normalizedArguments.options.once && !_this.supportedOptions.once;\n              var passive = normalizedArguments.options.passive && !_this.supportedOptions.passive;\n\n              if (once || passive) {\n                var listener = normalizedArguments.polyfilled.listener;\n\n                normalizedArguments.polyfilled.listener = function (event) {\n                  if (once) {\n                    this.removeEventListener(normalizedArguments.type, normalizedArguments.listener, normalizedArguments.options);\n                  }\n\n                  if (passive) {\n                    event.preventDefault = function () {\n                      throw new Error('Unable to preventDefault inside passive event listener invocation.');\n                    };\n                  }\n\n                  return listener.call(this, event);\n                };\n              }\n\n              if (!_this.supportedOptions.some) {\n                normalizedArguments.polyfilled.options = normalizedArguments.options.capture;\n              }\n            }\n          });\n        }\n      };\n\n      EventListenerInterceptor.polyfillListenerOptions(); // var onclick = function() {\n      //   console.log('click');\n      // };\n      // document.body.addEventListener('click', onclick, false);\n      // document.body.addEventListener('click', onclick, { once: true });\n      // document.body.addEventListener('click', onclick, { once: true });\n      // document.body.addEventListener('click', onclick, false);\n      // document.body.addEventListener('click', onclick, false);\n    })(require('./EventListenerInterceptor.js'));\n  }, {\n    \"./EventListenerInterceptor.js\": 1\n  }],\n  4: [function (require, module, exports) {\n    module.exports = function () {\n      return function ApplyThisPrototype(event, target) {\n        if (_typeof(target) === 'object' && target !== null) {\n          var proto = Object.getPrototypeOf(target);\n          var property;\n\n          for (property in proto) {\n            if (!(property in event)) {\n              var descriptor = Object.getOwnPropertyDescriptor(proto, property);\n\n              if (descriptor) {\n                Object.defineProperty(event, property, descriptor);\n              }\n            }\n          }\n\n          for (property in target) {\n            if (!(property in event)) {\n              event[property] = target[property];\n            }\n          }\n        }\n      };\n    }();\n  }, {}],\n  5: [function (require, module, exports) {\n    (function (ApplyThisPrototype) {\n      /**\r\n       * Polyfill CustomEvent\r\n       */\n      try {\n        var event = new window.CustomEvent('event', {\n          bubbles: true,\n          cancelable: true\n        });\n      } catch (error) {\n        var CustomEventOriginal = window.CustomEvent || window.Event;\n\n        var CustomEvent = function CustomEvent(eventName, params) {\n          params = params || {};\n          var event = document.createEvent('CustomEvent');\n          event.initCustomEvent(eventName, params.bubbles === void 0 ? false : params.bubbles, params.cancelable === void 0 ? false : params.cancelable, params.detail === void 0 ? {} : params.detail);\n          ApplyThisPrototype(event, this);\n          return event;\n        };\n\n        CustomEvent.prototype = CustomEventOriginal.prototype;\n        window.CustomEvent = CustomEvent;\n      }\n    })(require('./ApplyThisPrototype.js'));\n  }, {\n    \"./ApplyThisPrototype.js\": 4\n  }],\n  6: [function (require, module, exports) {\n    (function (ApplyThisPrototype) {\n      // ✓, ✗\n\n      /**\r\n       * Polyfill Event\r\n       */\n      try {\n        var event = new window.Event('event', {\n          bubbles: true,\n          cancelable: true\n        });\n      } catch (error) {\n        var EventOriginal = window.Event;\n\n        var Event = function Event(eventName, params) {\n          params = params || {};\n          var event = document.createEvent('Event');\n          event.initEvent(eventName, params.bubbles === void 0 ? false : params.bubbles, params.cancelable === void 0 ? false : params.cancelable, params.detail === void 0 ? {} : params.detail);\n          ApplyThisPrototype(event, this);\n          return event;\n        };\n\n        Event.prototype = EventOriginal.prototype;\n        window.Event = Event;\n      }\n    })(require('./ApplyThisPrototype.js'));\n  }, {\n    \"./ApplyThisPrototype.js\": 4\n  }],\n  7: [function (require, module, exports) {\n    (function (ApplyThisPrototype) {\n      /**\r\n       * Polyfill FocusEvent : https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent/FocusEvent\r\n       *  - relatedTarget ✓\r\n       */\n      try {\n        var event = new window.FocusEvent('event', {\n          bubbles: true,\n          cancelable: true\n        });\n      } catch (error) {\n        var FocusEventOriginal = window.FocusEvent || window.Event;\n\n        var FocusEvent = function FocusEvent(eventName, params) {\n          params = params || {};\n          var event = document.createEvent('FocusEvent'); // https://msdn.microsoft.com/en-us/library/ff975954(v=vs.85).aspx\n\n          event.initFocusEvent(eventName, params.bubbles === void 0 ? false : params.bubbles, params.cancelable === void 0 ? false : params.cancelable, params.view === void 0 ? window : params.view, params.detail === void 0 ? {} : params.detail, params.relatedTarget === void 0 ? null : params.relatedTarget);\n          ApplyThisPrototype(event, this);\n          return event;\n        };\n\n        FocusEvent.prototype = FocusEventOriginal.prototype;\n        window.FocusEvent = FocusEvent;\n      }\n    })(require('./ApplyThisPrototype.js'));\n  }, {\n    \"./ApplyThisPrototype.js\": 4\n  }],\n  8: [function (require, module, exports) {\n    (function (ApplyThisPrototype) {\n      /**\r\n       * Polyfill KeyboardEvent : https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent\r\n       *  - key ✓\r\n       *  - char ✓\r\n       *  - code ✓\r\n       *  - location ✓\r\n       *  - ctrlKey ✓\r\n       *  - shiftKey ✓\r\n       *  - altKey ✓\r\n       *  - metaKey ✓\r\n       *  - repeat ✓\r\n       *  - isComposing ✗\r\n       *  - charCode ✓\r\n       *  - keyCode ✓\r\n       *  - which ✓\r\n       */\n      try {\n        var event = new window.KeyboardEvent('event', {\n          bubbles: true,\n          cancelable: true\n        });\n      } catch (error) {\n        var KeyboardEventOriginal = window.KeyboardEvent || window.Event;\n\n        var KeyboardEvent = function KeyboardEvent(eventName, params) {\n          params = params || {};\n          var event = document.createEvent('KeyboardEvent'); // https://msdn.microsoft.com/en-us/library/ff975297(v=vs.85).aspx\n\n          event.initKeyboardEvent(eventName, params.bubbles === void 0 ? false : params.bubbles, params.cancelable === void 0 ? false : params.cancelable, params.view === void 0 ? window : params.view, params.key === void 0 ? '' : params.key, params.location === void 0 ? 0 : params.location, (params.ctrlKey === true ? 'Control ' : '') + (params.altKey === true ? 'Alt ' : '') + (params.shiftKey === true ? 'Shift ' : '') + (params.metaKey === true ? 'Meta ' : ''), params.repeat === void 0 ? false : params.repeat, params.locale === void 0 ? navigator.language : params.locale);\n          event.keyCode = params.keyCode === void 0 ? 0 : params.keyCode;\n          event.code = params.code === void 0 ? '' : params.code;\n          event.charCode = params.charCode === void 0 ? 0 : params.charCode;\n          event[\"char\"] = params.charCode === void 0 ? '' : params.charCode;\n          event.which = params.which === void 0 ? 0 : params.which;\n          ApplyThisPrototype(event, this);\n          return event;\n        };\n\n        KeyboardEvent.prototype = KeyboardEventOriginal.prototype;\n        window.KeyboardEvent = KeyboardEvent;\n      }\n    })(require('./ApplyThisPrototype.js'));\n  }, {\n    \"./ApplyThisPrototype.js\": 4\n  }],\n  9: [function (require, module, exports) {\n    (function (ApplyThisPrototype) {\n      /**\r\n       * Polyfill MouseEvent : https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/MouseEvent\r\n       *  - screenX ✓\r\n       *  - screenY ✓\r\n       *  - clientX ✓\r\n       *  - clientY ✓\r\n       *  - ctrlKey ✓\r\n       *  - shiftKey ✓\r\n       *  - altKey ✓\r\n       *  - metaKey ✓\r\n       *  - button ✓\r\n       *  - buttons ✓\r\n       *  - region ✓\r\n       */\n      try {\n        var event = new window.MouseEvent('event', {\n          bubbles: true,\n          cancelable: true\n        });\n      } catch (error) {\n        var MouseEventOriginal = window.MouseEvent || window.Event;\n\n        var MouseEvent = function MouseEvent(eventName, params) {\n          params = params || {};\n          var event = document.createEvent('MouseEvent'); // https://msdn.microsoft.com/en-us/library/ff975292(v=vs.85).aspx\n\n          event.initMouseEvent(eventName, params.bubbles === void 0 ? false : params.bubbles, params.cancelable === void 0 ? false : params.cancelable, params.view === void 0 ? window : params.view, params.detail === void 0 ? 0 : params.detail, params.screenX === void 0 ? 0 : params.screenX, params.screenY === void 0 ? 0 : params.screenY, params.clientX === void 0 ? 0 : params.clientX, params.clientY === void 0 ? 0 : params.clientY, params.ctrlKey === void 0 ? false : params.ctrlKey, params.altKey === void 0 ? false : params.altKey, params.shiftKey === void 0 ? false : params.shiftKey, params.metaKey === void 0 ? false : params.metaKey, params.button === void 0 ? 0 : params.button, params.relatedTarget === void 0 ? null : params.relatedTarget);\n          event.buttons = params.buttons === void 0 ? 0 : params.buttons;\n          event.region = params.region === void 0 ? null : params.region;\n          ApplyThisPrototype(event, this);\n          return event;\n        };\n\n        MouseEvent.prototype = MouseEventOriginal.prototype;\n        window.MouseEvent = MouseEvent;\n      }\n    })(require('./ApplyThisPrototype.js'));\n  }, {\n    \"./ApplyThisPrototype.js\": 4\n  }],\n  10: [function (require, module, exports) {\n    (function (ApplyThisPrototype) {\n      /**\r\n       * Polyfill PointerEvent\r\n       *  - pointerId ✓\r\n       *  - width ✓\r\n       *  - height ✓\r\n       *  - pressure ✓\r\n       *  - tangentialPressure ✓\r\n       *  - tiltX ✓\r\n       *  - tiltY ✓\r\n       *  - twist ✓\r\n       *  - pointerType ✓\r\n       *  - isPrimary ✓\r\n       */\n      try {\n        var event = new window.PointerEvent('event', {\n          bubbles: true,\n          cancelable: true\n        });\n      } catch (error) {\n        var PointerEventOriginal = window.PointerEvent || window.Event;\n\n        var PointerEvent = function PointerEvent(eventName, params) {\n          params = params || {};\n          var event = document.createEvent('PointerEvent'); // https://msdn.microsoft.com/en-us/library/jj192039(v=vs.85).aspx\n\n          event.initPointerEvent(eventName, params.bubbles === void 0 ? false : params.bubbles, params.cancelable === void 0 ? false : params.cancelable, params.view === void 0 ? window : params.view, params.detail === void 0 ? 0 : params.detail, params.screenX === void 0 ? 0 : params.screenX, params.screenY === void 0 ? 0 : params.screenY, params.clientX === void 0 ? 0 : params.clientX, params.clientY === void 0 ? 0 : params.clientY, params.ctrlKey === void 0 ? false : params.ctrlKey, params.altKey === void 0 ? false : params.altKey, params.shiftKey === void 0 ? false : params.shiftKey, params.metaKey === void 0 ? false : params.metaKey, params.button === void 0 ? 0 : params.button, params.relatedTarget === void 0 ? null : params.relatedTarget, params.offsetX === void 0 ? 0 : params.offsetX, params.offsetY === void 0 ? 0 : params.offsetY, params.width === void 0 ? 1 : params.width, params.height === void 0 ? 1 : params.height, params.pressure === void 0 ? 0 : params.pressure, params.twist === void 0 ? 0 : params.twist, params.tiltX === void 0 ? 0 : params.tiltX, params.tiltY === void 0 ? 0 : params.tiltY, params.pointerId === void 0 ? 0 : params.pointerId, params.pointerType === void 0 ? '' : params.pointerType, params.hwTimestamp === void 0 ? 0 : params.hwTimestamp, params.isPrimary === void 0 ? false : params.isPrimary);\n          event.tangentialPressure = params.tangentialPressure === void 0 ? 0 : params.tangentialPressure;\n          ApplyThisPrototype(event, this);\n          return event;\n        };\n\n        PointerEvent.prototype = PointerEventOriginal.prototype;\n        var rotationDescriptor = Object.getOwnPropertyDescriptor(PointerEvent.prototype, 'rotation');\n\n        if (rotationDescriptor) {\n          Object.defineProperty(PointerEvent.prototype, 'twist', rotationDescriptor);\n        }\n\n        window.PointerEvent = PointerEvent;\n      }\n    })(require('./ApplyThisPrototype.js'));\n  }, {\n    \"./ApplyThisPrototype.js\": 4\n  }],\n  11: [function (require, module, exports) {\n    require('./Event.js');\n\n    require('./CustomEvent.js');\n\n    require('./MouseEvent.js');\n\n    require('./KeyboardEvent.js');\n\n    require('./FocusEvent.js');\n\n    require('./PointerEvent.js');\n  }, {\n    \"./CustomEvent.js\": 5,\n    \"./Event.js\": 6,\n    \"./FocusEvent.js\": 7,\n    \"./KeyboardEvent.js\": 8,\n    \"./MouseEvent.js\": 9,\n    \"./PointerEvent.js\": 10\n  }],\n  12: [function (require, module, exports) {\n    require('./constructors/index.js');\n\n    require('./ListenerOptions.js');\n\n    require('./ListenerEventTypes.js');\n  }, {\n    \"./ListenerEventTypes.js\": 2,\n    \"./ListenerOptions.js\": 3,\n    \"./constructors/index.js\": 11\n  }]\n}, {}, [12]);\n\n//# sourceURL=webpack:///./node_modules/events-polyfill/index.js?");

/***/ }),

/***/ "./public/index.js":
/*!*************************!*\
  !*** ./public/index.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_EventManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/EventManager */ \"./lib/EventManager.js\");\n/* harmony import */ var _lib_EventManager__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lib_EventManager__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Foo_Foo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Foo/Foo */ \"./Foo/Foo.js\");\n/* harmony import */ var _Foo_Bar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Foo/Bar */ \"./Foo/Bar.js\");\n/* harmony import */ var _lib_ValueResolver__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/ValueResolver */ \"./lib/ValueResolver.js\");\n/* harmony import */ var _lib_ValueResolver__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_lib_ValueResolver__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n // change the directoryWhere\n\nvar eventManager = new _lib_EventManager__WEBPACK_IMPORTED_MODULE_0___default.a();\n'body'.subscribe('click', function (event) {\n  console.log('intersting', event);\n  console.log(this.dataResolver.call(this, 5));\n});\neventManager.setSubscribers([_Foo_Foo__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _Foo_Bar__WEBPACK_IMPORTED_MODULE_2__[\"default\"]]);\n\n//# sourceURL=webpack:///./public/index.js?");

/***/ })

/******/ });